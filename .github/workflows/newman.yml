---
name: Newman
on:
  push:
    branches:
      - main
      - qa
    tags: [prod]
    paths:
      - 'deploy/newman.Dockerfile'
  pull_request:
    # branches: [main]
    types: [opened,synchronize,reopened,labeled,unlabeled]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-newman
  cancel-in-progress: true
env:
  # Name of image
  IMAGE_NAME: newman
  # Name of org in GHCR Docker repository (must be lowercase)
  IMAGE_OWNER: ${{ github.repository_owner }}
  # Tag for release images
  # IMAGE_TAG: ${{ (github.ref == 'refs/heads/main' && 'staging') || (github.ref == 'refs/heads/qa' && 'qa') }}
  IMAGE_TAG: latest
  IMAGE_VER: ${{ github.sha }}
  # Registry for test images
  REGISTRY: ghcr.io/
  # Registry for public images, default is docker.io
  PUBLIC_REGISTRY: ''
  # Docker
  DOCKER_BUILDKIT: '1'
  DOCKER_FILE: deploy/newman.Dockerfile
jobs:
  build-newman:
    name: Build newman image
    permissions:
      contents: read
      # Push to ghcr.io repository
      packages: write
    runs-on: ubuntu-latest
    environment: ${{ (github.ref_name == 'main' && 'staging') || (github.ref_name == 'qa' && 'qa') || (github.ref_name == 'prod' && 'production') }}
    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pull public images without rate limits
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build image and push to GHCR
        uses: docker/build-push-action@v6
        with:
          file: ${{ env.DOCKER_FILE }}
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          cache-from: type=gha,scope=${{ github.workflow }}-newman
          cache-to: type=gha,scope=${{ github.workflow }}-newman,mode=max
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
